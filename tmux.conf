# tmux -u : for show icons properly

set -g mode-keys vi




# this is for show right colours is tmux when using other tools ilke neovim, remove if it's gives any error
set -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"

# Rebind Prefix to CTRL-a
set-option -g prefix C-a
unbind C-b
bind C-a send-prefix


# Start all numbering at 1 instead of 0 for better key reachability
set-option -g base-index 1
set-option -g pane-base-index 1

# Allow to renumber windows with ÃŸ key (german keyboard)
bind "`" move-window -r


# Increase history limit, as we want an "almost" unlimited buffer.
# May be set to something even higher, like 250k
set-option -g history-limit 1000

# Fix Terminal Title display, to not contain tmux specic information
set-option -g set-titles on
set-option -g set-titles-string "#{pane_title}"

# Open new windows and panes in the current working directory of the active
# pane.
bind c new-window -c "#{pane_current_path}"
bind-key ";" split-window -h -c "#{pane_current_path}"
bind-key "'" split-window -v -c "#{pane_current_path}"

# see clipboard buffer
bind-key v choose-buffer


# Enable extended support for some more sophisticated terminal emulator
# features. Disable them if they are causing problems!
set-option -s focus-events on
set-option -s extended-keys on

# Disable waiting time when pressing escape, for smoother Neovim usage. Disable
# if differentiation between function and meta keycombination is needed.
# importent to have, whithot this, tmux will wait for 500ms to see if you press a key{problem in neovim}
set-option -s escape-time 0 


# Pane navigation
bind -r Tab select-pane -t :.+
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Resize panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Copy mode
set -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# clipboard
set-option -g set-clipboard on

#custom scripts
# bind -n F2 send-keys "python3 ~/.config/tmux/launcher.py" C-m
bind -n F1 popup -xC -yC -w80% -h80% -E -d "#{pane_current_path}" -T " TERMINAL " "$SHELL"
bind -n F3 popup -xC -y90% -w95% -h11% -E -d "#{pane_current_path}" "python3 ~/.config/tmux/panel.py"





# Enables communication with the system clipboard.
# This also enables "copy on select" with the mouse if mouse mode is on.
set -g set-clipboard external

# For tmux versions 3.2 and higher, this is all you need for manual key bindings.
# It pipes the tmux copy buffer to the wl-copy command.
set -s copy-command 'wl-copy'

# Set mouse on to allow copying by selecting text with the mouse.
set -g mouse on

# Copy with mouse selection.
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'wl-copy'


# # Use Enter in copy-mode to copy to system clipboard via xclip (need to install xclip, for x11)
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "xclip-selection clipboard -i"

# # Sync tmux clipboard with system clipboard using xclip for mouse selections 9
# bind -T copy-mode-vi MouseDrag End1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"

# ____________________________________________________________________________________
##
# Styling
##

RED="#e06c75"
GREEN="#98c379"
YELLOW="#e5c07b"
BLUE="#61afef"
MAGENTA="#c678dd"
CYAN="#56b6c2"
BLACK="#282c34"
DARK_GRAY="#3e4451"
LIGHT_GRAY="#4F4946"
BG="#282c34"
FG="#abb2bf"



# Nerdfont characters
HALF_ROUND_OPEN="#(printf '\uE0B6')"
HALF_ROUND_CLOSE="#(printf '\uE0B4')"
TRIANGLE_OPEN="#(printf '\uE0B2')"
TRIANGLE_CLOSE="#(printf '\uE0B0')"

# Uncomment to move statusbar to the top
set-option -g status-position top

# Basic colors of the Statusbar
set-option -g status-style bg=${BG},fg=${FG}

# Show the window list centered between the left and the right section
set-option -g status-justify centre

# Style and set contents on the left section
# set-option -g status-left "\
# #[fg=${LIGHT_GRAY},bg=default]${HALF_ROUND_OPEN}\
# #[bg=${LIGHT_GRAY},fg=${RED}]%I:%M %p \
# #[bg=${LIGHT_GRAY},fg=${YELLOW}]#S \
# #[fg=${LIGHT_GRAY},bg=default]${TRIANGLE_CLOSE}\
# "


set-option -g status-left "\
#[bg=${BLACK},fg=${RED}]#H \
#[bg=${BLACK},fg=${YELLOW}]> #S \
"

# Style and set contents on the right section
# set-option -g status-right "\
# #[fg=${LIGHT_GRAY},bg=default]${TRIANGLE_OPEN}\
# #[bg=${LIGHT_GRAY},fg=${YELLOW}] #h\
# #[bg=${LIGHT_GRAY},fg=${GREEN}] #(cat /sys/class/power_supply/BAT0/capacity)%\
# #[fg=${LIGHT_GRAY},bg=default]${HALF_ROUND_CLOSE}\
# "


set-option -g status-right "\
#[bg=${BLACK},fg=${YELLOW}] %I:%M %p <\
#[bg=${BLACK},fg=${GREEN}] #(cat /sys/class/power_supply/BAT0/capacity)%\
"

# set -g status-right "#[fg=yellow]%H:%M:%S #[fg=green]#(cat /sys/class/power_supply/BAT0/capacity)%"


# Set max length of left and right section
set-option -g status-left-length 100
set-option -g status-right-length 100

# Style and set content for the inactive windows
# set-option -g window-status-format "\
#  \
# #I\
# #[fg=${MAGENTA}]:\
# #[fg=default]#W\
#  \
# "


set-option -g window-status-format "\
 #W \
"



# Style and set content for the active windows
# set-option -g window-status-current-format " \
# #[bg=${BLACK},fg=GREEN]>\
# #[fg=${GREEN}]:\
# #[fg=GREEN]#W \
# "

set-option -g window-status-current-format "\
#[bg=${BLACK},fg=GREEN][#W]\
"


# Remove the separator between window list items, as we already have spacing
# "around" inactive items
set-option -g window-status-separator ""
